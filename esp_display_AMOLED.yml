esphome:
  name: esphome-web-e86508
  friendly_name: Vivarium
  min_version: 2025.5.0
  name_add_mac_suffix: false
  platformio_options:
    board_build.flash_size: 16MB

esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: esp-idf

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "8WJ5tXb1DCDjglBGkLtdoTYyNrHyFNlyb6bnGrKKBpA="

ota:
  - platform: esphome
    password: "e552ee7b0b3ca8b2140911a5a8efaa32"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

spi:
  id: quad_spi
  type: quad
  clk_pin: 47
  data_pins: [18, 7, 48, 5]

i2c:
  id: bus_a
  sda: 13  # SHT31 SDA
  scl: 14  # SHT31 SCL

binary_sensor:
  - platform: homeassistant
    name: "Lamp Status"
    id: lamp_status
    entity_id: switch.smart_power_strip_socket_1

# SHT31 sensor
sensor:
  - platform: sht3xd
    i2c_id: bus_a
    update_interval: 1s
    temperature:
      name: "Vivarium Temperature"
      id: sht31_temp
      on_value:
        then:
          - lambda: |-
              ESP_LOGI("sht31", "Temperature changed: %.2f", id(sht31_temp).state);
    humidity:
      name: "Vivarium Humidity"
      id: sht31_hum
      on_value:
        then:
          - lambda: |-
              ESP_LOGI("sht31", "Humidity changed: %.2f", id(sht31_hum).state);
    address: 0x44

# Touch interface (FT3168)
# touchscreen:
#   - platform: ft5x06
#     id: my_touch
#     interrupt_pin: 41
#     address: 0x38  # Try detected address
#     on_touch:
#       - lambda: |-
#           static int color_state = 0;
#           color_state = (color_state + 1) % 4;
#           id(my_display).update();

display:
  - platform: qspi_dbi
    id: my_display
    model: RM67162
    dimensions:
      height: 400
      width: 240
    brightness: 200
    cs_pin: 6
    reset_pin: 17
    enable_pin: 38
    lambda: |-
      // CHINO's PLACE (top)
      it.printf(12, 10, id(font_header), Color(255,255,255), "VIVARIUM");

      // TEMP label (upper)
      it.printf(25, 70, id(font_medium), Color(255,255,255), "TEMP");

      // SHT31 Temperature (conditional color)
      if (id(sht31_temp).state >= 24 && id(sht31_temp).state <= 35) {
        it.printf(25, 100, id(font_large), Color(0,200,0), "%.1f", id(sht31_temp).state);
      } else {
        it.printf(25, 100, id(font_large), Color(220,40,40), "%.1f", id(sht31_temp).state);
      }
      it.printf(145, 110, id(font_medium), Color(255,255,255), "Â°C");

      // LAMP OFF (white)
      if (id(lamp_status).state) {
        it.printf(25, 170, id(font_medium), Color(255,220,40), "LAMP ON");
      } else {
        it.printf(25, 170, id(font_medium), Color(200,200,200), "LAMP OFF");
      }

      // Humidity label (lower)
      it.printf(25, 235, id(font_medium), Color(255,255,255), "HUMIDITY");
      // SHT31 Humidity (conditional color)
      if (id(sht31_hum).state < 75) {
        it.printf(25, 265, id(font_large), Color(220,40,40), "%.1f", id(sht31_hum).state);
      } else {
        it.printf(25, 265, id(font_large), Color(0,200,0), "%.1f", id(sht31_hum).state);
      }
      it.printf(145, 275, id(font_medium), Color(255,255,255), "%%");

      // FOG ON (yellow)
      it.printf(25, 335, id(font_medium), Color(255,220,40), "FOG ON");

# Fonts
font:
  - file: "gfonts://Roboto"
    id: font_medium
    size: 26
  - file: "gfonts://Roboto"
    id: font_large
    size: 60
  - file: "gfonts://Roboto"
    id: font_header
    size: 45
